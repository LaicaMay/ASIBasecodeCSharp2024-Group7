@using System.Security.Claims
@model IEnumerable<ExpenseTracker.Data.Models.Expense>

@{
    Layout = "_MainLayout";
}
<link href="~/mainstyle/expense-details.css" rel="stylesheet" />
<link href="~/mainstyle/add-expense.css" rel="stylesheet" />
<link href="~/mainstyle/edit-expense.css" rel="stylesheet" />
        <div class="main-container">
            @if (User.Identity.IsAuthenticated)
            {
                <div class="main-title">
                    <h2>Hey there, @User.FindFirst(ClaimTypes.NameIdentifier)?.Value!</h2>
                    <p>Your budgets</p>
                </div>
            }      
            <div class="balance-container">             
                    <div class="expense">
                        <p id="expense-category">Grocery</p>
                        <p id="expense-tag">PHP1,500.00</p>
                        <p id="expense-user">Mori Estella</p>
                        <div id="deduction">-750.00</div>
                    </div>
                    <div class="expense">
                        <p id="expense-category">School</p>
                        <p id="expense-tag">PHP2,500.00</p>
                        <p id="expense-user">Mori Estella</p>
                        <div id="deduction">-100.00</div>
                    </div> 
            </div>
            <div class="bottom-title">
                Recent Expenses
            </div>
            <div id="table-content" class="hide">
                <table class="table-expense">
                    <thead>
                        <tr>
                            <th>
                                <form action="@Url.Action("Overview", "Expense")" method="get" style="display: inline;">
                                    <input type="hidden" name="sortOrderCategory" value="@((ViewBag.CurrentSortOrderCategory == "asc") ? "reset" : "asc")" />
                                    <input type="hidden" name="sortOrderDate" value="reset" />
                                    <button type="submit" style="background: none; border: none; padding: 0;">
                                        <img src="~/images/iconVec/@(ViewBag.CurrentSortOrderCategory == "asc" ? "up-arrow.svg" : "down-arrw.svg")" alt="Sort by Category">
                                        <span style="font-size: 1rem; font-family: Arial, Helvetica, sans-serif;">Category</span>
                                    </button>
                                </form>
                            </th>

                            <th>Expense Name</th>
                            <th>Amount</th>
                            <th>
                                <form action="@Url.Action("Overview", "Expense")" method="get" style="display: inline;">
                                    <input type="hidden" name="sortOrderDate" value="@((ViewBag.CurrentSortOrderDate == "asc") ? "reset" : "asc")" />
                                    <input type="hidden" name="sortOrderCategory" value="reset" />
                                    <button type="submit" style="background: none; border: none; padding: 0;">
                                        <img src="~/images/iconVec/@(ViewBag.CurrentSortOrderDate == "asc" ? "up-arrow.svg" : "down-arrw.svg")" alt="Sort by Date">
                                        <span style="font-size: 1rem; font-family: Arial, Helvetica, sans-serif;">Date</span>
                                    </button>
                                </form>
                            </th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td data-user-id="@item.UserId"    
                                        data-expense-id="@item.ExpenseId"
                                        data-category-name="@item.Category?.CategoryName"
                                        data-expense-name="@item.ExpenseName"
                                        data-amount="@item.Amount"                    
                                        data-date="@(item.Date?.ToString("yyyy-MM-dd") ?? string.Empty)"
                                        data-description="@item.Description"
                                        data-start-date="@item.StartDate"
                                        data-end-date="@item.EndDate"
                                    >
                                        <div style="display: flex;
                                    align-items: center;
                                    justify-content: start; padding-left: 0px;
                                            ">
                                            <div class="img-bg">
                                                <img src="~/images/iconVec/tags.svg" alt="">
                                            </div>
                                            <p style="margin-left: 10px;">@item.Category?.CategoryName</p>
                                        </div>
                                    </td>
                                    <td>@item.ExpenseName</td>
                                    <td>₱@item.Amount</td>
                                    <td>@(item.Date == null ? item.StartDate : item.Date)</td>
                                    <td><a id="item-details" class="item-details">Details</a></td>
                                </tr>
                            }
                        } else
                        {
                            <tr>
                                <td colspan="5">No recent expenses.</td>                                        
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="button-search">
                    <form method="get" action="@Url.Action("Overview", "Expense")">
                        <div style="position: relative;">
                            <input type="text" name="Search" placeholder="Search">
                            <div style="position: absolute;
                            top: 10px; right: 0;">
                                <button id="searchBtn" type="submit">Search</button>
                            </div>
                        </div>
                    </form>
                    <a id="add-id">Add Expenses</a>
                </div>
            </div>
            <div style="display: flex; justify-content: space-between;">
                <div id="view-recent" class="recent-hide">
                    <a href="#">View Recent</a>
                </div>
                <div id="add-expense" class="recent-hide">
                    <a id="m-add-id" href="#">Add Expenses</a>
                </div>
            </div>
        </div>

        <div id="expense-container" class="hide">
            <div id="expense-details">
                <div style="display: flex; align-items: center; justify-content: center;
                            margin-top: 10px;
                            margin-bottom: 10px;">
                    <div>
                        <p class="details-expense">Expense Details</p>
                    </div>
                </div>
                <div style="display: flex; flex-direction: row; align-items: center;
                            justify-content: start;
                            margin-top: 25px;">
                    <div style="display: flex; flex-direction: column;
                                margin-left: 20px;
                                gap: 15px;
                                margin-top: 5px;">
                        <div>
                            <img src="~/images/iconVec/ingredient-icon.svg" alt="">
                        </div>
                        <div>
                            <img src="~/images/iconVec/money-icon.svg" alt="">
                        </div>
                        <div>
                            <img src="~/images/iconVec/CategoryThumbail.svg" alt="">
                        </div>
                        <div>
                            <img src="~/images/iconVec/bag-icon.svg" alt="">
                        </div>
                        <div>
                            <img src="/images/iconVec/paper-icon.svg" alt="">
                        </div>
                    </div>
                    <div style="display: flex; flex-direction: column; margin-left: 20px;
                                gap: 15px;">
                        <input type="hidden" id="modal-expense-id" value=""/>
                        <p id="modal-expense-name"></p>
                        <p id="modal-amount"></p>
                        <p id="modal-category-name"></p>
                        <p id="modal-date"></p>
                        <p id="modal-description"></p>
                    </div>
                </div>
                <div style="display: flex; align-items: center; justify-content: center;
                            margin-top: 10px;
                            margin-bottom: 10px;">
                    <button id="edit">Edit</button>
                </div>
                <div style="display: flex; align-items: center; justify-content: center;
                            margin-top: 10px;
                            margin-bottom: 10px;">
                    <button id="del">Delete</button>
                </div>
            </div>
            <div class="blur-bg">
            </div>
        </div>    

        @await Html.PartialAsync("_EditExpensePartialView", Model.FirstOrDefault())
        
        @await Html.PartialAsync("_AddExpensePartialView", new Expense())

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.item-details').forEach(function (detailsLink) {
            detailsLink.addEventListener('click', function () {
                const parentRow = this.closest('tr').querySelector('td');


                const expenseId = parentRow.getAttribute('data-expense-id');
                const expenseName = parentRow.getAttribute('data-expense-name');
                const amount = parentRow.getAttribute('data-amount');
                const categoryName = parentRow.getAttribute('data-category-name');
                const date = parentRow.getAttribute('data-date');
                const description = parentRow.getAttribute('data-description');
                const startDate = parentRow.getAttribute('data-start-date');

                console.log('ExpneseId', expenseId);

                document.getElementById('modal-expense-id').value = expenseId;
                document.getElementById('modal-expense-name').textContent = expenseName;
                document.getElementById('modal-amount').textContent = `₱${amount}`;
                document.getElementById('modal-category-name').textContent = categoryName;
                document.getElementById('modal-date').textContent = (date === null || date === '') ? startDate : date;
                document.getElementById('modal-description').textContent = description;

                var modalId = document.getElementById('modal-expense-id')

                document.getElementById('expense-container').classList.remove('hide');
                document.getElementById('expense-container').classList.add('show');

                document.getElementById('add-expense-container').classList.remove('show');
                document.getElementById('add-expense-container').classList.add('hide');

                document.getElementById('edit').addEventListener('click', function () {
 
                    document.getElementById('edit-expense-id').value = expenseId;
                    document.getElementById('edit-expense-name').value = expenseName;
                    document.getElementById('edit-amount').value = amount;
                    document.getElementById('edit-date').value = date;
                    document.getElementById('edit-description').value = description;

                    const categoryDropdown = document.getElementById('edit-category-id');
                    for (let i = 0; i < categoryDropdown.options.length; i++) {
                        if (categoryDropdown.options[i].text === categoryName) {
                            categoryDropdown.selectedIndex = i;
                            break;
                        }
                    }

                    document.getElementById('expense-container').classList.remove('show');
                    document.getElementById('expense-container').classList.add('hide');

                    document.getElementById('edit-form-cont').classList.remove('hide');
                    document.getElementById('edit-form-cont').classList.add('show');
                });

                document.getElementById('del').onclick = function () {
                    const expenseId = document.getElementById('modal-expense-id').value;

                    if (confirm('Are you sure you want to delete this expense?')) {
                        fetch(`/Expense/DeleteExpense/${expenseId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        })
                        .then(response => {
                            if (response.ok) {
                                return response.json();
                            } else {
                                return Promise.reject('Failed to delete expense.');
                            }
                        })
                        .then(data => {
                            console.log(data.message);

                            const row = document.querySelector(`tr[data-expense-id='${expenseId}']`);
                            if (row) {
                                row.remove(); 
                            }

                            document.getElementById('expense-container').classList.remove('show');
                            document.getElementById('expense-container').classList.add('hide');

                            const successModal = document.getElementById('success-added-modal');
                            successModal.classList.remove('hide');
                            successModal.classList.add('show');
                            setTimeout(() => {
                                successModal.classList.remove('show');
                                successModal.classList.add('hide');
                            }, 3000);
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert(error);
                        });
                    }
                };

            });
        });

        document.querySelector('.blur-bg').addEventListener('click', function () {
            document.getElementById('expense-container').classList.remove('show');
            document.getElementById('expense-container').classList.add('hide');
        });

        document.getElementById('edit').addEventListener('click', function (event) {
            event.stopPropagation();

            let editForm = document.getElementById('edit-form-cont');

            if (editForm.classList.contains('hide')) {
                editForm.classList.remove('hide');
                editForm.classList.add('show');
            }
        });

        document.getElementById('edit-add-blur').addEventListener('click', function (event) {
            event.stopPropagation();
            document.getElementById('edit-form-cont').classList.remove('show');
            document.getElementById('edit-form-cont').classList.add('hide');
        });

    });
</script>